{% extends 'base.html.twig' %}
{% import '_macros/macro.html.twig' as macro %}
{% set signUpOpen = "now"|date('Y-m-d') <= tournament.signUpTill|date('Y-m-d') and tournament.signUpStart|date('Y-m-d') <= "now"|date('Y-m-d') %}
{% set isTournamentEnded = tournament.end|date('Y-m-d') < "now"|date('Y-m-d') %}

{% block body %}
    {% include 'tournament/_parts/_panel.twig' %}

<div class="main">
    <div class="container">
        <div class="row">
            <div class="col-xs-12">

                {% if tournament.signUpStart <= "now"|date('Y-m-d') %}

                        {% if signUpOpen %}
                            <p class="text-center">
                                Zgłoszenia przyjmowane są do {{ macro.formatYMDdzienTygodnia(tournament.signUpTill) }}
                            </p>
                        {% else %}
                            {% if isTournamentEnded %}
                                <p class="text-center">
                                    Turniej zakończył się {{ macro.formatYMDdzienTygodnia(tournament.end) }}
                                </p>
                            {% else %}
                                <p class="text-center">
                                    Termin przyjmowania zgłoszeń
                                    minął {{ macro.formatYMDdzienTygodnia(tournament.signUpTill) }}
                                </p>
                            {% endif %}
                        {% endif %}

                    {% else %}
                        <p class="text-center">
                            Zgłoszenia przyjmowane są od {{ macro.formatYMDdzienTygodnia(tournament.signUpStart) }}
                        </p>
                {% endif %}


                {% if not tournament.isAvailableSeats %}
                    <p class="text-center">
                        <strong>Limit miejsc został wyczerpany</strong>
                    </p>
                {% endif %}

                {% if not is_granted('ROLE_USER') %}
                    <p>
                        Aby edytować / skasować swoje zgłoszenie na turniej musisz być zalogowany! &#8594;
                        <a href="{{ path ('login') }}">Przejdź do strony logowania</a>
                    </p>
                {% endif %}

                {% if is_granted('ROLE_USER') %}

                    {% if isUserRegister %}

                        <p>Twoje zgłoszenie na turniej zostało zarejestrowane:</p>
                        {% include 'tournament/_parts/_twojeZgloszeniehtml.twig' with { signUpTournament : [isUserRegister]} only %}
                        {% include 'tournament/_parts/skasuj_moje_zgloszenie_form.html.twig' %}

                        {% if signUpOpen %}

                            <br>
                            <button id="edit_button" class="btn btn-primary align-left">Edytuj</button>
                            <br>

                            <div id="edit_box" class="col-xs-12">
                                {% include 'tournament/_parts/show_sing_up_form_if_inssurance_data_ELSE_link_to_profile.html.twig' %}
                            </div>

                        {% else %}
                            <br>
                            <small>Termin przyjmowania i edycji zgłoszeń zakończył się. Obecnie możesz tylko skasować
                                swoje zgłoszenie.
                            </small>
                            <small>Jeśli skasujesz swoje zgłoszenie, nie będziesz mógł ponownie się zapisać!</small>
                            <br>

                        {% endif %}


                        {#{% if not isUserRegister.isPaid %}#}
                            {#<br>#}
                            {#<p>#}
                                {#<small>{{ include(template_from_string(tournament.paymentInfo)) }}</small>#}
                            {#</p>#}
                        {#{% endif %}#}
                        
                    {% endif %}

                    {% if signUpOpen and tournament.isAvailableSeats %}

                        {% include 'tournament/_parts/show_sing_up_form_if_inssurance_data_ELSE_link_to_profile.html.twig' %}

                    {% endif %}

                {% endif %}

                <p class="text-center"> Liczba zapisanych: {{ tournament.getSignUpTournament| length }} / {{ tournament.capacity }}</p>

                <div class="col-xs-12">
                    <table id="table-signups" class="table table-striped">
                        <thead>
                        <tr>
                            <th></th>
                            <th>Nazwisko i Imię</th>
                            <th class="text-center">Rekord</th>
                            <th class="text-center">Dyscyplina</th>
                            <th class="text-center">Płeć</th>
                            <th class="text-center">Klasa</th>
                            <th class="text-center">Kat. Wagowa</th>
                            <th class="text-center">Wiek</th>
                            <th class="text-center">Klub</th>
                        </tr>
                        </thead>
                    </table>
                </div>

            </div>
        </div>
    </div>
</div>
{% endblock %}

    {% block javascripts %}
        {{ parent() }}

        <script src="{{ asset('js/fight_table.js') }}"></script>

        <script>
            $(document).ready(function () {
                {% if isUserRegister.getYoutubeId is defined and isUserRegister.getYouTubeId != '' %}
                embedYouTube('{{ isUserRegister.getYoutubeId }}');
                {% endif %}
            });


            $("#edit_box").hide();

            $("#edit_button").click(function () {
                $("#edit_box").toggle();
            });

            var t = $('#table-signups').DataTable({
                "ajax": "{{ path('api_signup_list', {id: tournament.id}) }}",
                "columns": [
                    {data: null},
                    {
                        mData: function (data) {
                            return "<a href='" + data.user.href + "'>" + data.user.surname + ' ' + data.user.name + '</a>';
                        }
                    },
                    {
                        mData: function (data) {
                            return record(data.user);
                        }
                    },
                    {
                        mData: function (data) {
                            return data.discipline;
                        }
                    },
                    {
                        mData: function (data) {
                            return data.user.male ? 'M' : 'K';
                        }
                    },
                    {
                        mData: function (data) {
                            return data.formula;
                        }
                    },
                    {
                        mData: function (data) {
                            return data.weight;
                        }
                    },
                    {
                        mData: function (data) {
                            return age(data.user);
                        }
                    },
                    {
                        mData: function (data) {
                            return club(data.user);
                        }
                    },
                ],
                "language": {
                    "url": "//cdn.datatables.net/plug-ins/1.10.15/i18n/Polish.json"
                },
                "bPaginate": false,
                "dom": 'lifrtp'
            });

            t.on('order.dt search.dt', function () {
                t.column(0, {search: 'applied', order: 'applied'}).nodes().each(function (cell, i) {
                    cell.innerHTML = i + 1;
                });
            }).draw();


        </script>
    {% endblock %}